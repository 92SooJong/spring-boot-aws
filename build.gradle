buildscript{
    ext{ // 전역변수
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories{
        mavenCentral()
        jcenter()
    }
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


plugins { // (1)
    id 'org.springframework.boot' version '2.4.1' // RELEASE 삭제
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

// for Junit 5
test { // (2)
    useJUnitPlatform()
}

dependencies {
    // 버전을 명시하지 않아야 상단에 작성한 class path의 버전을 따라감.
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    // lombok
    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    // jpa, h2
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')

    // mustache
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    // OAuth2
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')

    // jdbc를 통한 세션 저장
    implementation('org.springframework.session:spring-session-jdbc')

    // java를 통해 mariadb를 제어하기 위함.
    implementation("org.mariadb.jdbc:mariadb-java-client")

    // 스프링 시큐리티 테스트를 위한 의존성 추가
    testImplementation("org.springframework.security:spring-security-test")



}

test {
    useJUnitPlatform()
}